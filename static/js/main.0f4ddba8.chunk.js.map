{"version":3,"sources":["components/Notification/Notification.module.css","components/ResetParameters/ResetParameters.module.css","components/Statistics/Statistics.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","helpers/colorMaker.js","helpers/theFirstLetterToUpperCase.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/ResetParameters/ResetParameters.js","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","title","children","className","styles","section","defaultProps","btnStyle","backgroundColor","Math","random","toString","substring","FeedbackOptions","onLeaveFeedback","options","s","buttons","map","option","button","type","onClick","style","word","replace","match","toUpperCase","shortid","generate","Statistics","good","neutral","bad","total","positivePercentage","counters","counter","counterBad","percent","Notification","message","notification","ResetParameters","reset","App","useState","setGood","setNeutral","setBad","countTotalFeedback","feedbackKey","prevState","floor","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f4ddba8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1C7Ma\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ResetParameters_button__19DnP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"counters\":\"Statistics_counters__2SQla\",\"counter\":\"Statistics_counter__Z_x9a\",\"counterBad\":\"Statistics_counterBad__2zB6z\",\"total\":\"Statistics_total__2pGqP\",\"percent\":\"Statistics_percent__1qfaV\"};","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nexport default function Section({ title, children }) {\n  return (\n    <section className={styles.section}>\n      {title && <h2 className={styles.title}>{title}</h2>}\n      {children}\n    </section>\n  );\n}\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport shortid from 'shortid';\nimport s from './FeedbackOptions.module.css';\nimport colorMaker from '../../helpers/colorMaker';\nimport theFirstLetterToUpperCase from '../../helpers/theFirstLetterToUpperCase';\n\nexport const btnStyle = { backgroundColor: colorMaker() };\n\nconst FeedbackOptions = ({ onLeaveFeedback, options }) => (\n  <div className={s.buttons}>\n    {options.map(option => (\n      <button\n        key={shortid.generate()}\n        className={s.button}\n        type=\"button\"\n        onClick={() => onLeaveFeedback(option)}\n        style={btnStyle}\n      >\n        {theFirstLetterToUpperCase(option)}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  onLeaveFeedback: PropTypes.func.isRequired,\n  options: PropTypes.array.isRequired,\n};\n\nexport default FeedbackOptions;\n","export default function colorMaker() {\n  return '#' + (Math.random().toString(16) + '000000').substring(2, 8) + '80';\n}\n","export default function theFirstLetterToUpperCase(word) {\n  return word.replace(/(^\\w{1})/, match => match.toUpperCase());\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport s from './Statistics.module.css';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className={s.counters}>\n    <span className={s.counter}>Good: {good}</span>\n    <span className={s.counter}>Neutral: {neutral}</span>\n    <span className={s.counterBad}>Bad: {bad}</span>\n    <span className={s.counter}>\n      <span className={s.total}>Total: </span>\n      {total}\n    </span>\n    <span className={s.counter}>\n      <span className={s.percent}>Positive feedback: </span>\n      {`${positivePercentage}%`}\n    </span>\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport s from './Notification.module.css';\n\nconst Notification = ({ message }) => (\n  <p className={s.notification}>{message}</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport s from './ResetParameters.module.css';\nimport { btnStyle } from '../FeedbackOptions/FeedbackOptions';\n\nconst ResetParameters = ({ reset }) => (\n  <button className={s.button} type=\"button\" onClick={reset} style={btnStyle}>\n    Reset\n  </button>\n);\n\nResetParameters.propTypes = {\n  reset: PropTypes.func.isRequired,\n};\n\nexport default ResetParameters;\n","import { useState } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\nimport ResetParameters from './components/ResetParameters';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const onLeaveFeedback = feedbackKey => {\n    const feedbackActionsByKey = {\n      good: setGood,\n      neutral: setNeutral,\n      bad: setBad,\n    };\n    feedbackActionsByKey[feedbackKey](prevState => prevState + 1);\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return countTotalFeedback()\n      ? Math.floor((good / countTotalFeedback()) * 100)\n      : 0;\n  };\n\n  const resetParameters = () => {\n    setGood(0);\n    setNeutral(0);\n    setBad(0);\n  };\n\n  return (\n    <div className=\"statistics\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={['good', 'neutral', 'bad']}\n          onLeaveFeedback={onLeaveFeedback}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        {!countTotalFeedback() ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <>\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positivePercentage={countPositiveFeedbackPercentage()}\n            />\n            <ResetParameters reset={resetParameters} />\n          </>\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__2S6oE\",\"section\":\"Section_section__Ap5Zy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__2qTWo\",\"button\":\"FeedbackOptions_button__3n-hy\"};"],"sourceRoot":""}